(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{178:function(n,e,t){"use strict";t.r(e);var l=t(0),o=Object(l.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"add-two-numbers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-two-numbers","aria-hidden":"true"}},[n._v("#")]),n._v(" add two numbers")]),n._v(" "),t("p",[n._v("leetCode 第二题 第一次做时的解法,挺垃圾的解法后面会更新。\n"),t("img",{attrs:{src:"/addTwoNumbers.png",alt:"leetCode-2"}})]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n    let list1 = [],list2 = [],list3 = [];\n    list1.push(l1.val)\n    while(l1.next !== null){\n        l1 = l1.next;\n        list1.push(l1.val)\n    }\n    list2.push(l2.val)\n    while(l2.next !== null){\n        l2 = l2.next;\n        list2.push(l2.val)\n    }\n    const l = list1.length >= list2.length ? list1.length:list2.length;\n    let temp = 0;\n    for(let i = 0;i<l;i++){\n        const ls1 = list1[i] === undefined?0:list1[i];\n        const ls2 = list2[i] === undefined?0:list2[i];\n        list3[i] = ((ls1 + ls2)%10 + temp) % 10;\n        temp = Math.floor((ls1 + ls2 + temp) / 10);\n    }\n    if(temp > 0){\n       list3.push(temp)\n    };\n    let node = null;\n    let head = new ListNode(list3[0]);\n    let pNode = head;\n    for(let j = 1;j < list3.length;j++){\n        node = new ListNode(list3[j]);\n        pNode.next = node;\n        pNode = node;\n    }\n    return head\n};\n")])])]),t("p",[n._v("直接用链表来接(需要对链表以及js中的引用类型有深刻理解)")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var addTwoNumbers = function(l1, l2) {\nlet node1 = l1;\nlet node2 = l2;\n// 进位 默认0\nlet temp = 0;\nlet initNode = new ListNode();\nlet parentNode = null;\ninitNode.val = (node1.val + node2.val + temp) % 10;\ntemp = Math.floor((node1.val + node2.val + temp) / 10);\nif(node1.next !== null || node2.next !== null || (temp > 0)){\n    initNode.next = new ListNode();\n    if(temp > 0){\n       initNode.next = new ListNode(temp) \n    }\n}\nparentNode = initNode.next;\nwhile (node1 && (node1.next !== null) || node2 && (node2.next !== null)) {\n  node1 = node1 && node1.next;\n  node2 = node2 && node2.next;\n  const node1Val = (node1 === null ? 0 : node1.val);\n  const node2Val = (node2 === null ? 0 : node2.val);\n  parentNode.val = (node1Val + node2Val + temp) % 10;\n  temp = Math.floor((node1Val + node2Val + temp) / 10);\n  if((node1 && (node1.next !== null)) || (node2 && (node2.next !== null)) ||(temp > 0)){\n     parentNode.next = new ListNode();\n      if(temp > 0 ){\n        parentNode.next = new ListNode(temp);\n      }\n  }\n  parentNode = parentNode.next;\n}\nreturn initNode;\n};\n")])])]),t("p",[n._v("跑个分\n"),t("img",{attrs:{src:"/addTwoNumbers2.png",alt:"leetcode-2"}})])])}],!1,null,null,null);e.default=o.exports}}]);